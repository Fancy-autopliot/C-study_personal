
对象的初始化和清理
构造函数和析构函数
对象的初始化和清理是重要的安全问题
    1. 如果一个对象或者变量没有初始状态，对其使用后果是未知
    2. 同样的使用完一个对象或变量，如果没有及时清理，也会造成一定的安全问题
c++利用构造函数和析构函数解决上述问题，函数会被编译器自动调用，完成对象初始化和清理工作
对象的初始化和清理工作是编译器强制要我们做的事情，如果我们不提供构造和析构，编译器会提供空实现的构造函数和析构函数

构造函数：主要作用在创建对象时为对象的成员属性赋值，构造函数由编译器自动调用，无需手动调用
构造函数语法：类名(){}
    1. 构造函数没有返回值也不用写void
    2. 函数名称与类名相同
    3. 构造函数可以有参数，因此可以发生重载
    4. 程序在调用对象时会自动调用构造，无需手动调用，而且只会调用一次

析构函数：主要作用在对象销毁前系统自动调动，执行一些清理工作
析构函数语法：~类名(){}
    1. 析构函没有返回值也不用写void
    2. 函数名称与类名相同，在名称前加上符号 ~
    3. 构造函数不可以有参数，因此不可以发生重载
    4. 程序在对象销毁前会自动调用析构函数，无需手动调用，而且只会调用一次